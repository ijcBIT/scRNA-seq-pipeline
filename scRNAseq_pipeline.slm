#!/bin/bash

#SBATCH --job-name=scRNAseq-pipeline
#SBATCH --time=20:00:00
#SBATCH --output=logs/%x.%j.out
#SBATCH --error=logs/%x.%j.err
#SBATCH --mem=60G  #128
#SBATCH --cpus-per-task=8 

# Record start time
start=$(date +%s)

# Load module 

module load singularity


# Step 1: Run cellranger
echo "Running cellranger"

# Run the cellranger count script inside the Singularity container
singularity exec \
  --bind /mnt/beegfs/mvilardell/scRNA-seq-pipeline/:/scRNAseq_data \
  scRNAseq_refData.sif \
  /scRNAseq_data/bin/cellranger_count.sh


# Check if cellranger was successful
if [ $? -ne 0 ]; then
  echo "cellranger failed."
  exit 1
fi


#record end time, total run time and print it
end=$(date +%s)
runtime=$((end-start))
echo "Cellranger runtime: $runtime seconds"


# Record start time
start=$(date +%s)


# Step 2: Generate HTML/pdf
echo "Generating HTML and Pdf"

# Generate HTML output
singularity exec \
  --bind /mnt/beegfs/mvilardell/scRNA-seq-pipeline/:/scRNAseq_data \
  scRNAseq_refData.sif \
  Rscript -e "rmarkdown::render('/scRNAseq_data/bin/scRNAseq.Rmd', 
                                output_format = 'html_document', 
                                output_file = 'scRNAseq_singularity_out.html', 
                                params = list(file_10X_h5 = '/scRNAseq_data/analysis_results/analysis_results/outs/filtered_feature_bc_matrix.h5'))"

# Generate PDF output
singularity exec \
  --bind /mnt/beegfs/mvilardell/scRNA-seq-pipeline/:/scRNAseq_data \
  scRNAseq_refData.sif \
  Rscript -e "rmarkdown::render('/scRNAseq_data/bin/scRNAseq.Rmd', 
                                output_format = 'pdf_document', 
                                output_file = 'scRNAseq_singularity_out.pdf', 
                                params = list(file_10X_h5 = '/scRNAseq_data/analysis_results/analysis_results/outs/filtered_feature_bc_matrix.h5'))"



echo date
# Check if HTML/Pdf generation was successful
if [ $? -ne 0 ]; then
  echo "HTML/PDF generation failed."
  exit 1
fi


echo "All the steps completed successfully!" 

#record end time, total run time and print it
end=$(date +%s)
runtime=$((end-start))

echo "HTML/PDF generation runtime: $runtime seconds"
